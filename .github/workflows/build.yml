name: Build and Test
on:
  push:
    branches:
      - '**'  # This matches all branches
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
        include:
          # Linux configurations
          - os: ubuntu-latest
            compiler:
              cc: gcc
              cxx: g++
          - os: ubuntu-latest
            compiler:
              cc: clang
              cxx: clang++
          # Windows configurations
          - os: windows-latest
            compiler:
              cc: cl
              cxx: cl
          # macOS configurations
          - os: macos-latest
            compiler:
              cc: clang
              cxx: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libboost-all-dev
        # Add any other Linux dependencies here

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install boost
        # Add any other macOS dependencies here

    - name: Install Dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Add Windows-specific dependency installation
        # Example using vcpkg:
        # vcpkg install boost:x64-windows
        
    - name: Configure CMake
      shell: bash
      run: |
        cmake -B build \
              -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
              -DCMAKE_C_COMPILER=${{matrix.compiler.cc}} \
              -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}

    - name: Build
      shell: bash
      run: cmake --build build --config ${{matrix.build_type}}

    - name: Test
      shell: bash
      working-directory: build
      run: ctest -C ${{matrix.build_type}} --output-on-failure
